from django import forms
from django.shortcuts import get_object_or_404
from .models import Project, Link, Subdomain, HttpServices

class ProjectName(forms.ModelForm):
    class Meta:
        model = Project
        fields = "__all__"

        def save(self,pk):
            
            # data = self.cleaned_data['subdomains']
            link = Link.objects.filter(id = pk)

            subdomain = Subdomain(link = link, )


            pass
            

class Links(forms.Form):
    links = forms.CharField(widget=forms.Textarea)

    def save(self, pk):
        data = self.cleaned_data['links']
        whole_link = data.split('\r\n')
       



        proj = Project.objects.get(id = pk)
        links = Link.objects.filter(project = proj)



        link_list = [str(link) for link in links]


        new_linklist = [link for link in whole_link if link not in link_list]


        for item in new_linklist:
            link = Link(project = proj, link = item)
            link.save()
            print('link kaydedildi')
            #Resullerin fonksiyon burda çalışacak sonucu subdomains save ile kaydedicek



            for item in ['wwww.gmail.com', 'www.fotograflar.com', 'www.meetings.com']:# Link yerine resullerin fonksiyonunun listesi gelicek
                linkobj = Link.objects.get(id = link.id)
                sub = Subdomain(project = proj , link = linkobj, subdomain = item)
                sub.save()

class SubdomainForm(forms.Form):
    subdomains = forms.CharField(widget=forms.Textarea)


    def save(self, id):

        project = get_object_or_404(Project, id = id)
        subdomains = Subdomain.objects.filter(project = project)
        data = self.cleaned_data['subdomains']
        whole_subdomain = data.split('\r\n')

        subdomains_db = [str(subdomain) for subdomain in subdomains]

        new_subdomains = [str(newSubdomain) for newSubdomain in whole_subdomain if newSubdomain not in subdomains_db]

        for subdomain in new_subdomains:
            Subdomain(project = project, subdomain = subdomain).save()

        #Resullerin kodu burada çalışacak
        subdomains = Subdomain.objects.filter(project= project)
        all_https = HttpServices.objects.filter(project = project)
        all_https = [str(http) for http in all_https]
        unique_https = []

        for i in all_https:
            if i not in unique_https:
                unique_https.append(i)
        print(unique_https)

        for item in range(len(subdomains)):

            # tek bir subdomain alıcaklar. 
            # subdomainin http servislerini bulup bana liste dönücekler

            for http_service in ["htttps//:www.google.com"]:
                if http_service not in unique_https:
                    HttpServices(subdomain = subdomains[item], project = project, http_service = http_service).save()
                    unique_https.append(http_service)
        

        pass


class HttpsServicesForm(forms.Form):
    http_services = forms.CharField(widget=forms.Textarea)


